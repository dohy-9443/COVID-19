{"version":3,"sources":["components/Header.js","components/Contents.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Contents","useState","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","useEffect","a","axios","get","res","items","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","labels","map","datasets","label","backgroundColor","fill","data","borderColor","last","length","makeData","fetchEvents","options","legend","display","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63644e65.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>COVID-19</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nconst Contents = () => {\r\n  const [confirmedData, setConfirmedData] = useState({});\r\n  const [quarantinedData, setQuarantinedData] = useState({});\r\n  const [comparedData, setComparedData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      const res = await axios.get(\r\n        \"https://api.covid19api.com/dayone/country/kr\"\r\n      );\r\n\r\n      const makeData = (items) => {\r\n        const arr = items.reduce((acc, cur) => {\r\n          const currentDate = new Date(cur.Date);\r\n\r\n          const year = currentDate.getFullYear();\r\n          const month = currentDate.getMonth();\r\n          const date = currentDate.getDate();\r\n\r\n          const confirmed = cur.Confirmed;\r\n          const active = cur.Active;\r\n          const death = cur.Deaths;\r\n          const recovered = cur.Recovered;\r\n\r\n          const findItem = acc.find(\r\n            (a) => a.year === year && a.month === month\r\n          );\r\n\r\n          if (!findItem) {\r\n            acc.push({\r\n              year,\r\n              month,\r\n              date,\r\n              confirmed,\r\n              active,\r\n              death,\r\n              recovered,\r\n            });\r\n          }\r\n\r\n          if (findItem && findItem.date < date) {\r\n            findItem.year = year;\r\n            findItem.month = month;\r\n            findItem.date = date;\r\n            findItem.confirmed = confirmed;\r\n            findItem.active = active;\r\n            findItem.death = death;\r\n            findItem.recovered = recovered;\r\n          }\r\n\r\n          return acc;\r\n        }, []);\r\n\r\n        const labels = arr.map((a) => `${a.month + 1}월`);\r\n        setConfirmedData({\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: \"국내 누적 확진자\",\r\n              backgroundColor: \"salmon\",\r\n              fill: true,\r\n              data: arr.map((a) => a.confirmed),\r\n            },\r\n          ],\r\n        });\r\n        setQuarantinedData({\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: \"월별 격리자 현황\",\r\n              borderColor: \"salmon\",\r\n              fill: false,\r\n              data: arr.map((a) => a.active),\r\n            },\r\n          ],\r\n        });\r\n        const last = arr[arr.length - 1];\r\n        setComparedData({\r\n          labels: [\"확진자\", \"격리해제\", \"사망\"],\r\n          datasets: [\r\n            {\r\n              label: \"누적 환진, 해제, 사망 비율\",\r\n              backgroundColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\r\n              borderColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\r\n              fill: true,\r\n              data: [last.confirmed, last.recovered, last.death],\r\n            },\r\n          ],\r\n        });\r\n      };\r\n\r\n      makeData(res.data);\r\n    };\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <h2>국내 코로나 현황</h2>\r\n      <div className=\"contents\">\r\n        <div>\r\n          <Bar\r\n            data={confirmedData}\r\n            options={\r\n              ({\r\n                title: {\r\n                  display: true,\r\n                  text: \"누적 확진자 추이\",\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <Line\r\n            data={quarantinedData}\r\n            options={\r\n              ({\r\n                title: {\r\n                  display: true,\r\n                  text: \"월별 격리자 현황\",\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <Doughnut\r\n            data={comparedData}\r\n            options={\r\n              ({\r\n                title: {\r\n                  display: true,\r\n                  text: `누적 확진, 해제, 사망 (${\r\n                    new Date().getMonth() + 1\r\n                  } 월)`,\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contents;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Contents from \"./components/Contents\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Contents />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}